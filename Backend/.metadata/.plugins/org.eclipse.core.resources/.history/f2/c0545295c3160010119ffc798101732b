package com.sharefiles.controller;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;


import com.sharefiles.service.FileService;




@Controller
@RequestMapping("/files")
public class FileController {
	
	@Autowired
	private FileService fileService;
	
	
	@GetMapping("/")
	public String index(Model model) {
		model.addAttribute("files",fileService.getAll());
		return "list-files";
	}
	
	@PostMapping("/upload")
	public String uploadFile(@RequestParam("file") MultipartFile file,@RequestParam("uploadedBy") String uploadedBy) throws IOException{
		fileService.uplaodFile(file, uploadedBy);
		return "redirect:/";
	}
	
	@GetMapping("/share/{id}")
	public String shareFile(@PathVariable int id,Model model) {
		ResponseEntity<?> fileModel=fileService.shareFile(id);
		if(fileModel.hasBody()) {
			String currentUrl= ServletUriComponentsBuilder.fromCurrentRequest().toString();
			model.addAttribute("shareUrl",currentUrl);
			model.addAttribute("file",fileModel.getBody());
			return "share-file";
		}
		else {
			return "redirect:/";
		}
	}
	
	@PostMapping("/delete/{id}")
	public ResponseEntity<?> deleteFile(@PathVariable int id) {
		return  fileService.deleteFile(id);
		
	}
	
	@GetMapping("/files")
	public String login() {
		return "home";
	}
	
	@GetMapping("/share")
	public String share() {
		return "share-files";
	}
	
	
	

}
